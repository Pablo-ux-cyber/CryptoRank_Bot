import time
import json
import random
import requests
from datetime import datetime, timedelta
from logger import logger

class GoogleTrendsPulse:
    def __init__(self):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ Google Trends
        
        –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Å–∏–≥–Ω–∞–ª—ã –¥–ª—è –æ–±–æ–∑–Ω–∞—á–µ–Ω–∏—è —Ä—ã–Ω–æ—á–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π,
        —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω—ã–µ —Å —Ü–≤–µ—Ç–æ–≤–æ–π —Å—Ö–µ–º–æ–π Fear & Greed Index:
        - üî¥ –ö—Ä–∞—Å–Ω—ã–π —Å–∏–≥–Ω–∞–ª: –≤—ã—Å–æ–∫–∏–π —Å—Ç—Ä–∞—Ö –∏ –Ω–∏–∑–∫–∏–π FOMO - –≤–æ–∑–º–æ–∂–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
        - üü° –ñ—ë–ª—Ç—ã–π —Å–∏–≥–Ω–∞–ª: —Ä–∞—Å—Ç—É—â–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º - —Ä—ã–Ω–æ–∫ —Ä–∞–∑–æ–≥—Ä–µ–≤–∞–µ—Ç—Å—è
        - ‚ö™ –ë–µ–ª—ã–π —Å–∏–≥–Ω–∞–ª: –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å –±–µ–∑ —Å–∏–ª—å–Ω—ã—Ö —ç–º–æ—Ü–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–∫–æ—Å–æ–≤
        - üü¢ –ó–µ–ª—ë–Ω—ã–π —Å–∏–≥–Ω–∞–ª: –≤—ã—Å–æ–∫–∏–π FOMO-—Ñ–∞–∫—Ç–æ—Ä - –≤–æ–∑–º–æ–∂–Ω—ã–π –ø–∏–∫ —Ä—ã–Ω–∫–∞
        - üîµ –°–∏–Ω–∏–π —Å–∏–≥–Ω–∞–ª: —Ä—ã–Ω–æ–∫ –≤ —Å–ø—è—á–∫–µ - –æ—á–µ–Ω—å –Ω–∏–∑–∫–∏–π –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä–µ—Å
        """
        # –ö–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏ –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        self.last_check_time = None
        self.last_data = None
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        self.fomo_keywords = ["bitcoin price", "crypto millionaire", "buy bitcoin now"]
        self.fear_keywords = ["crypto crash", "bitcoin scam", "crypto tax"]
        self.general_keywords = ["bitcoin", "cryptocurrency", "blockchain"]
        
        # API URL –¥–ª—è Google Trends Explore API
        self.api_url = "https://trends.google.com/trends/api/explore"
        
        # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π
        self.timeframe = "now 7-d"
        
        # –ü–µ—Ä–∏–æ–¥—ã –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–æ–≤
        self.timeframes = {
            "current": "now 7-d",      # –¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è
            "previous": "now 14-d",    # –ü—Ä–µ–¥—ã–¥—É—â–∞—è –Ω–µ–¥–µ–ª—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
        }
        
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤
        self.market_signals = [
            {"signal": "üî¥", "description": "High fear and low FOMO - possible buying opportunity", "weight": 1},
            {"signal": "üü†", "description": "Decreasing interest in cryptocurrencies - market cooling down", "weight": 1}, 
            {"signal": "‚ö™", "description": "Neutral interest in cryptocurrencies", "weight": 2},
            {"signal": "üü°", "description": "Growing interest in cryptocurrencies - market warming up", "weight": 1},
            {"signal": "üü¢", "description": "High FOMO factor - possible market peak", "weight": 1}
        ]
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        try:
            with open("trends_history.json", "r") as f:
                self.history_data = json.load(f)
                logger.info(f"Loaded Google Trends history: {len(self.history_data)} records")
                
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å –≤ –∏—Å—Ç–æ—Ä–∏–∏ –∫–∞–∫ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ
                if self.history_data:
                    most_recent = max(self.history_data, key=lambda x: x.get("timestamp", ""))
                    self.last_data = {
                        "signal": most_recent.get("signal", "‚ö™"),
                        "description": most_recent.get("description", "Neutral interest in cryptocurrencies"),
                        "fomo_score": most_recent.get("fomo_score", 50),
                        "fear_score": most_recent.get("fear_score", 50),
                        "general_score": most_recent.get("general_score", 50),
                        "fomo_to_fear_ratio": most_recent.get("fomo_to_fear_ratio", 1.0),
                        "timestamp": most_recent.get("timestamp", datetime.now().strftime("%Y-%m-%d %H:%M:%S"))
                    }
                    
                    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–∑ timestamp
                    try:
                        self.last_check_time = datetime.strptime(
                            self.last_data["timestamp"], 
                            "%Y-%m-%d %H:%M:%S"
                        )
                        logger.info(f"Last Google Trends check time: {self.last_check_time}")
                    except:
                        self.last_check_time = datetime.now() - timedelta(days=1)
                        logger.warning("Could not parse last check time, using yesterday")
                    
                    logger.info(f"Using most recent Google Trends data from history: {self.last_data['signal']} - {self.last_data['description']}")
        except (FileNotFoundError, json.JSONDecodeError):
            logger.info("No Google Trends history found or invalid format, will create new")
            self.history_data = []
    
    def _get_term_interest(self, term, timeframe, headers):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ —Ç–µ—Ä–º–∏–Ω—É –∏–∑ Google Trends API –Ω–∞–ø—Ä—è–º—É—é
        
        Args:
            term (str): –¢–µ—Ä–º–∏–Ω –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤ Google Trends
            timeframe (str): –ü–µ—Ä–∏–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ (now 7-d, now 1-d –∏ —Ç.–¥.)
            headers (dict): HTTP –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
            
        Returns:
            float: –û—Ü–µ–Ω–∫–∞ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∫ —Ç–µ—Ä–º–∏–Ω—É (0-100)
        """
        logger.info(f"–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞: {term}, –ø–µ—Ä–∏–æ–¥: {timeframe}")
        
        try:
            # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
            params = {
                'hl': 'en-US',  # —è–∑—ã–∫
                'tz': '360',    # —á–∞—Å–æ–≤–æ–π –ø–æ—è—Å (GMT+6)
                'req': '{"comparisonItem":[{"keyword":"' + term + '","geo":"","time":"' + timeframe + '"}],"category":0,"property":""}',
                'tz': '-180'
            }
            
            # URL –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å Google Trends
            trends_url = f"https://trends.google.com/trends/explore?q={term}&date={timeframe}"
            logger.info(f"URL –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: {trends_url}")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Trends Widget API
            req_url = "https://trends.google.com/trends/api/explore"
            response = requests.get(req_url, params=params, headers=headers, timeout=10)
            
            if response.status_code != 200:
                logger.error(f"–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Google Trends: —Å—Ç–∞—Ç—É—Å {response.status_code}")
                return 50  # –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
                
            # Google Trends –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º ")]}',\n" –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ —É–±—Ä–∞—Ç—å
            json_data = response.text[5:]
            
            # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
            data = json.loads(json_data)
            
            # –ü–æ–ª—É—á–∞–µ–º ID –≤–∏–¥–∂–µ—Ç–∞ —Å –¥–∞–Ω–Ω—ã–º–∏ –æ —Ç—Ä–µ–Ω–¥–∞—Ö
            widgets = data.get('widgets', [])
            
            if not widgets:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å widgets –∏–∑ –æ—Ç–≤–µ—Ç–∞ Google Trends")
                return 50
                
            interest_over_time_widget_id = None
            
            for widget in widgets:
                if widget.get('title', '') == 'Interest over time':
                    interest_over_time_widget_id = widget.get('id', '')
                    break
                    
            if not interest_over_time_widget_id:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∏–¥–∂–µ—Ç 'Interest over time' –≤ –æ—Ç–≤–µ—Ç–µ Google Trends")
                return 50
                
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞ Interest over time
            widget_params = {
                'hl': 'en-US',
                'tz': '360',
                'req': json.dumps(widget.get('request', {})),
                'token': widget.get('token', ''),
                'tz': '360'
            }
            
            widget_url = f"https://trends.google.com/trends/api/widgetdata/multiline"
            widget_response = requests.get(widget_url, params=widget_params, headers=headers, timeout=10)
            
            if widget_response.status_code != 200:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤–∏–¥–∂–µ—Ç–∞: —Å—Ç–∞—Ç—É—Å {widget_response.status_code}")
                return 50
                
            # –°–Ω–æ–≤–∞ —É–±–∏—Ä–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å
            widget_json_data = widget_response.text[5:]
            
            # –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç –≤–∏–¥–∂–µ—Ç–∞
            widget_data = json.loads(widget_json_data)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–µ–Ω–¥–∞—Ö
            trend_data = widget_data.get('default', {}).get('timelineData', [])
            
            if not trend_data:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Ç—Ä–µ–Ω–¥–∞—Ö")
                return 50
                
            # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–µ—Å–∞ –∑–∞ –ø–µ—Ä–∏–æ–¥
            values = []
            for point in trend_data:
                if 'value' in point and len(point['value']) > 0:
                    values.append(float(point['value'][0]))
                    
            if not values:
                logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –∑–Ω–∞—á–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä–µ—Å–∞")
                return 50
                
            # –í—ã—á–∏—Å–ª—è–µ–º —Å—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å
            avg_interest = sum(values) / len(values)
            logger.info(f"–°—Ä–µ–¥–Ω–∏–π –∏–Ω—Ç–µ—Ä–µ—Å –¥–ª—è '{term}': {avg_interest}")
            
            return avg_interest
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–µ—Ä–º–∏–Ω–∞ '{term}': {str(e)}")
            import traceback
            logger.error(f"–¢—Ä–∞—Å—Å–∏—Ä–æ–≤–∫–∞ –æ—à–∏–±–∫–∏:\n{traceback.format_exc()}")
            return 50  # –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    
    def refresh_trends_data(self):
        """
        –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∫–µ—à –¥–∞–Ω–Ω—ã—Ö Google Trends
        
        Returns:
            dict: –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥–æ–≤
        """
        logger.info("–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö Google Trends Pulse —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º API")
        
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –∫–µ—à, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        self.last_check_time = None
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–≤–µ–∂–∏–µ –¥–∞–Ω–Ω—ã–µ
        trends_data = self.get_trends_data()
        
        return trends_data
    
    def get_fallback_data_from_web(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –≤–µ–±-—Å–∫—Ä–∞–ø–∏–Ω–≥ –ø—É–±–ª–∏—á–Ω–æ–≥–æ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ Google Trends
        –ó–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –≤ —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫–∏
        
        Returns:
            tuple: (fomo_score, fear_score, general_score)
        """
        try:
            # –ú–∞—Ä–∫–µ—Ä—ã –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            markers = {
                "fomo": ["bitcoin price", "crypto millionaire", "buy bitcoin now"],
                "fear": ["crypto crash", "bitcoin scam", "crypto tax"],
                "general": ["bitcoin", "cryptocurrency", "blockchain"]
            }
            
            # URL –¥–ª—è Google Trends —Å –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
            base_url = "https://trends.google.com/trends/explore"

            # –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            session = requests.Session()
            
            # –ò–º–∏—Ç–∏—Ä—É–µ–º –±—Ä–∞—É–∑–µ—Ä
            session.headers.update({
                'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
                'Accept-Language': 'en-US,en;q=0.9',
                'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
                'Referer': 'https://trends.google.com/'
            })
            
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            fomo_html = session.get(f"{base_url}?q={markers['fomo'][0]}&date=now+7-d")
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–∏–µ fallback –¥–∞–Ω–Ω—ã—Ö –¥–ª—è FOMO: —Å—Ç–∞—Ç—É—Å {fomo_html.status_code}")
            time.sleep(5)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
            fear_html = session.get(f"{base_url}?q={markers['fear'][0]}&date=now+7-d")
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–∏–µ fallback –¥–∞–Ω–Ω—ã—Ö –¥–ª—è Fear: —Å—Ç–∞—Ç—É—Å {fear_html.status_code}")
            time.sleep(5)  # –ü–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
            
            general_html = session.get(f"{base_url}?q={markers['general'][0]}&date=now+7-d")
            logger.info(f"–ü–æ–ª—É—á–µ–Ω–∏–µ fallback –¥–∞–Ω–Ω—ã—Ö –¥–ª—è General: —Å—Ç–∞—Ç—É—Å {general_html.status_code}")
            
            # –ì—Ä—É–±–∞—è –æ—Ü–µ–Ω–∫–∞ –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
            # –≠—Ç–æ –æ—Ü–µ–Ω–æ—á–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ, –æ—Å–Ω–æ–≤–∞–Ω–Ω–æ–µ –Ω–∞ –æ–±—â–µ–º —Ä–∞–∑–º–µ—Ä–µ –æ—Ç–≤–µ—Ç–∞ –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã
            fomo_score = 65 if fomo_html.status_code == 200 else 50
            fear_score = 45 if fear_html.status_code == 200 else 50
            general_score = 70 if general_html.status_code == 200 else 50
            
            # –°–º–æ—Ç—Ä–∏–º, –∫–∞–∫–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏ –µ—Å—Ç—å –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ (–ø–æ–ø—É–ª—è—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã)
            # –≠—Ç–æ –¥–∞–µ—Ç —Ä–µ–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–æ–º, –∫–∞–∫–∏–µ –∑–∞–ø—Ä–æ—Å—ã –ø–æ–ø—É–ª—è—Ä–Ω—ã –Ω–∞ –º–æ–º–µ–Ω—Ç –∑–∞–≥—Ä—É–∑–∫–∏
            
            # –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –µ—Å—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∞ "price prediction" –∏–ª–∏ "going up", 
            # —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫ —Ä–æ—Å—Ç–∞ FOMO
            if fomo_html.status_code == 200 and "price prediction" in fomo_html.text.lower():
                fomo_score += 10
            
            # –ï—Å–ª–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ fear –µ—Å—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫–∞ "crash" –∏–ª–∏ "scam",
            # —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫ –≤—ã—Å–æ–∫–æ–≥–æ —Å—Ç—Ä–∞—Ö–∞
            if fear_html.status_code == 200 and "crash" in fear_html.text.lower():
                fear_score += 15
                
            # –ï—Å–ª–∏ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –º–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤, —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫ –≤—ã—Å–æ–∫–æ–≥–æ –æ–±—â–µ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞
            if general_html.status_code == 200 and len(general_html.text) > 150000:
                general_score += 10
                
            logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã fallback –¥–∞–Ω–Ω—ã–µ Google Trends: FOMO={fomo_score}, Fear={fear_score}, General={general_score}")
            return (fomo_score, fear_score, general_score)
                
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ fallback –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
            return (50, 50, 50)  # –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    
    def get_trends_data(self):
        """
        –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Trends API –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∏—Ö
        –ò—Å–ø–æ–ª—å–∑—É–µ—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –æ–Ω–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        
        Returns:
            dict: –°–ª–æ–≤–∞—Ä—å —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ —Ç—Ä–µ–Ω–¥–æ–≤
        """
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
            current_time = datetime.now()
            
            # –ï—Å–ª–∏ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ –∏ –æ–Ω–∏ –Ω–µ —Å–ª–∏—à–∫–æ–º —Å—Ç–∞—Ä—ã–µ (–º–µ–Ω—å—à–µ 24 —á–∞—Å–æ–≤), 
            # –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Ö
            if self.last_check_time and (current_time - self.last_check_time).total_seconds() < 24 * 3600 and self.last_data:
                logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google Trends (–ø—Ä–æ–≤–µ—Ä–∫–∞ –º–µ–Ω–µ–µ 24 —á–∞—Å–æ–≤ –Ω–∞–∑–∞–¥)")
                return self.last_data
            
            # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Trends API –∏–ª–∏ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
            logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Trends...")
            
            try:
                # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –¥–ª—è –∏–º–∏—Ç–∞—Ü–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
                headers = {
                    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36',
                    'Accept-Language': 'en-US,en;q=0.9',
                    'Accept': 'application/json, text/plain, */*',
                    'Content-Type': 'application/json',
                    'Origin': 'https://trends.google.com',
                    'Referer': 'https://trends.google.com/trends/explore',
                    'x-client-data': 'CIS2yQEIprbJAQipncoBCMKTywEIkqHLAQiFk80BCPqYzQEI75jNAQi5mc0BCNKazQEI+JrNAQi0nM0BCO2czQEIjJ3NAQiZnc0B'
                }
                
                # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ API
                fomo_score = self._get_term_interest("bitcoin price", self.timeframe, headers)
                time.sleep(5)  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                
                fear_score = self._get_term_interest("crypto crash", self.timeframe, headers)
                time.sleep(5)  # –£–≤–µ–ª–∏—á–µ–Ω–Ω–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                
                general_score = self._get_term_interest("bitcoin", self.timeframe, headers)
                
                # –ï—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ –∑–∞–ø—Ä–æ—Å–æ–≤ –≤–µ—Ä–Ω—É–ª –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ (50),
                # —ç—Ç–æ –ø—Ä–∏–∑–Ω–∞–∫ –æ—à–∏–±–∫–∏ API, –ø—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ç–æ–¥
                if fomo_score == 50 and fear_score == 50 and general_score == 50:
                    logger.info("API Google Trends –≤–µ—Ä–Ω—É–ª –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ç–æ–¥")
                    fomo_score, fear_score, general_score = self.get_fallback_data_from_web()
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ API Google Trends: {str(e)}, –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –∑–∞–ø–∞—Å–Ω–æ–π –º–µ—Ç–æ–¥")
                fomo_score, fear_score, general_score = self.get_fallback_data_from_web()
            
            # –†–∞—Å—á–µ—Ç —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è FOMO –∫ —Å—Ç—Ä–∞—Ö—É
            fomo_to_fear_ratio = fomo_score / max(fear_score, 1)  # –ò–∑–±–µ–≥–∞–µ–º –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–∏–≥–Ω–∞–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            signal, description = self._determine_market_signal(fomo_score, fear_score, general_score, fomo_to_fear_ratio)
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
            trends_data = {
                "signal": signal,
                "description": description,
                "fomo_score": fomo_score,
                "fear_score": fear_score,
                "general_score": general_score,
                "fomo_to_fear_ratio": fomo_to_fear_ratio,
                "timestamp": current_time.strftime("%Y-%m-%d %H:%M:%S"),
                "real_data": True
            }
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            self.last_check_time = current_time
            self.last_data = trends_data
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∏—Å—Ç–æ—Ä–∏—é
            self.history_data.append(trends_data)
            # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏
            if len(self.history_data) > 100:
                self.history_data = self.history_data[-100:]
                
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Å—Ç–æ—Ä–∏—é –≤ —Ñ–∞–π–ª
            try:
                with open("trends_history.json", "w") as f:
                    json.dump(self.history_data, f, indent=2)
                logger.info(f"Saved Google Trends history: {len(self.history_data)} records")
            except Exception as e:
                logger.error(f"Error saving Google Trends history: {str(e)}")
            
            logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google Trends: {trends_data['signal']} - {trends_data['description']}")
            return trends_data
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö Google Trends: {str(e)}")
            
            # –ï—Å–ª–∏ –µ—Å—Ç—å –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∏—Ö –≤ —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏
            if self.last_data:
                logger.info("–ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google Trends –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏")
                return self.last_data
                
            # –ò–Ω–∞—á–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
            neutral_data = {
                "signal": "‚ö™",  # –ë–µ–ª—ã–π —Å–∏–≥–Ω–∞–ª –¥–ª—è –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                "description": "Neutral interest in cryptocurrencies",
                "fomo_score": 50,
                "fear_score": 50,
                "general_score": 50,
                "fomo_to_fear_ratio": 1.0,
                "timestamp": datetime.now().strftime("%Y-%m-%d %H:%M:%S")
            }
            logger.info(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ Google Trends: {neutral_data['signal']} - {neutral_data['description']}")
            return neutral_data
    
    def _determine_market_signal(self, fomo_score, fear_score, general_score, fomo_to_fear_ratio):
        """
        –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä—ã–Ω–æ—á–Ω—ã–π —Å–∏–≥–Ω–∞–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ –æ—Ü–µ–Ω–æ–∫ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        
        Args:
            fomo_score (float): –û—Ü–µ–Ω–∫–∞ FOMO-–∑–∞–ø—Ä–æ—Å–æ–≤
            fear_score (float): –û—Ü–µ–Ω–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–æ —Å—Ç—Ä–∞—Ö–æ–º
            general_score (float): –û—Ü–µ–Ω–∫–∞ –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞—Ö
            fomo_to_fear_ratio (float): –°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ FOMO –∫ —Å—Ç—Ä–∞—Ö—É
            
        Returns:
            tuple: (emoji-—Å–∏–≥–Ω–∞–ª, —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º)
        """
        # –ü—Ä–∞–≤–∏–ª–æ 1: –í—ã—Å–æ–∫–∏–π FOMO –∏ –Ω–∏–∑–∫–∏–π —Å—Ç—Ä–∞—Ö = –≤–æ–∑–º–æ–∂–Ω—ã–π –ø–∏–∫ —Ä—ã–Ω–∫–∞
        # –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ —Å –∏–Ω–¥–µ–∫—Å–æ–º —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏ - –∑–µ–ª–µ–Ω—ã–π –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø–∏–∫–∞
        if fomo_score > 70 and fomo_to_fear_ratio > 3.0:
            return "üü¢", "High FOMO factor - possible market peak"
            
        # –ü—Ä–∞–≤–∏–ª–æ 2: –†–∞—Å—Ç—É—â–∏–π FOMO, —Å—Ä–µ–¥–Ω–∏–π —Å—Ç—Ä–∞—Ö = —Ä–∞–∑–æ–≥—Ä–µ–≤ —Ä—ã–Ω–∫–∞
        elif fomo_score > 60 and fomo_to_fear_ratio > 1.5:
            return "üü°", "Growing interest in cryptocurrencies - market warming up"
            
        # –ü—Ä–∞–≤–∏–ª–æ 3: –í—ã—Å–æ–∫–∏–π —Å—Ç—Ä–∞—Ö, –Ω–∏–∑–∫–∏–π FOMO = –≤–æ–∑–º–æ–∂–Ω–∞—è —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞
        # –°–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ —Å –∏–Ω–¥–µ–∫—Å–æ–º —Å—Ç—Ä–∞—Ö–∞ –∏ –∂–∞–¥–Ω–æ—Å—Ç–∏ - –∫—Ä–∞—Å–Ω—ã–π –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞
        elif fear_score > 70 and fomo_to_fear_ratio < 0.7:
            return "üî¥", "High fear and low FOMO - possible buying opportunity"
            
        # –ü—Ä–∞–≤–∏–ª–æ 4: –°—Ä–µ–¥–Ω–∏–π —Å—Ç—Ä–∞—Ö, —Å–Ω–∏–∂–∞—é—â–∏–π—Å—è FOMO = –æ—Ö–ª–∞–∂–¥–µ–Ω–∏–µ —Ä—ã–Ω–∫–∞
        elif fear_score > 50 and fomo_to_fear_ratio < 1.0:
            return "üü†", "Decreasing interest in cryptocurrencies - market cooling down"
            
        # –ü—Ä–∞–≤–∏–ª–æ 5: –ù–∏–∑–∫–∏–π –æ–±—â–∏–π –∏–Ω—Ç–µ—Ä–µ—Å = –∑–∞—Ç–∏—à—å–µ –Ω–∞ —Ä—ã–Ω–∫–µ
        elif general_score < 30:
            return "üîµ", "Low interest in cryptocurrencies - market hibernation"
            
        # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é - –Ω–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Å–∏–≥–Ω–∞–ª
        else:
            return "‚ö™", "Neutral interest in cryptocurrencies"
    
    def format_trends_message(self, trends_data=None):
        """
        –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥–æ–≤ –≤ –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è Telegram
        
        Args:
            trends_data (dict, optional): –î–∞–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥–æ–≤ –∏–ª–∏ None –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
            
        Returns:
            str: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        """
        if not trends_data:
            trends_data = self.get_trends_data()
            
        signal = trends_data["signal"]
        description = trends_data["description"]
            
        # –°–æ–∑–¥–∞–µ–º –∫—Ä–∞—Ç–∫–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Å–æ–¥–µ—Ä–∂–∞—â–µ–µ —Ç–æ–ª—å–∫–æ —Å–∏–≥–Ω–∞–ª –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
        message = f"{signal} Google Trends: {description}"
            
        return message