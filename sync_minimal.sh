#!/bin/bash
# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º –≤—Å–µ—Ö –ª–æ–∫–∞–ª—å–Ω—ã—Ö –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–π
# –∏ –∑–∞—â–∏—Ç–æ–π –æ—Ç —É–¥–∞–ª–µ–Ω–∏—è –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫

cd /root/coinbaserank_bot

# –ö–ª—é—á–µ–≤—ã–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã
CRITICAL_FILES=(
  "config.py"
  "main.py"
  "models.py"
  "telegram_bot.py"
  "google_trends_pulse.py"
  "fear_greed_index.py"
  "scheduler.py"
  "scraper.py"
  "history_api.py"
  "logger.py"
  "trends_history.json"
  "rank_history.json"
  "fear_greed_history.json"
)

CRITICAL_DIRS=(
  "templates"
  "static"
  "routes"
  "backups"
)

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
mkdir -p ./backups
mkdir -p /tmp/git_sync_backups

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è —Å–ø–∏—Å–∫–∞ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
MODIFIED_FILES="/tmp/modified_files.txt"
DELETED_FILES="/tmp/deleted_files.txt"

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
echo "–û–ø—Ä–µ–¥–µ–ª—è—é –ª–æ–∫–∞–ª—å–Ω–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
git status --porcelain | grep -E '^ M|^MM' | awk '{print $2}' > "$MODIFIED_FILES"

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã –ø—Ä–∏ pull
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å —É–¥–∞–ª–µ–Ω—ã –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
git fetch origin main
git diff --name-status origin/main..HEAD | grep "^D" | awk '{print $2}' > "$DELETED_FILES"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
if [[ -s "$DELETED_FILES" ]]; then
  CRITICAL_DELETE=0
  while IFS= read -r file; do
    for critical in "${CRITICAL_FILES[@]}"; do
      if [[ "$file" == "$critical" ]]; then
        echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω –ø—Ä–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏: $file"
        CRITICAL_DELETE=1
      fi
    done
    
    for dir in "${CRITICAL_DIRS[@]}"; do
      if [[ "$file" == "$dir"/* ]]; then
        echo "‚ö†Ô∏è –í–ù–ò–ú–ê–ù–ò–ï: –§–∞–π–ª –∏–∑ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –±—É–¥–µ—Ç —É–¥–∞–ª—ë–Ω: $file"
        CRITICAL_DELETE=1
      fi
    done
  done < "$DELETED_FILES"
  
  if [[ $CRITICAL_DELETE -eq 1 ]]; then
    echo "‚õî –û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –ø–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤!"
    echo "–í—ã–ø–æ–ª–Ω—è—é —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π –º–µ—Ç–∫–æ–π
    BACKUP_DIR="./backups/full_backup_$(date +%Y%m%d_%H%M%S)"
    mkdir -p "$BACKUP_DIR"
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã
    for file in "${CRITICAL_FILES[@]}"; do
      if [[ -f "$file" ]]; then
        cp -f "$file" "$BACKUP_DIR/$(basename "$file")"
        echo "  –°–æ—Ö—Ä–∞–Ω—ë–Ω: $file"
      fi
    done
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    for dir in "${CRITICAL_DIRS[@]}"; do
      if [[ -d "$dir" ]]; then
        mkdir -p "$BACKUP_DIR/$dir"
        cp -rf "$dir"/* "$BACKUP_DIR/$dir/" 2>/dev/null || true
        echo "  –°–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $dir"
      fi
    done
    
    echo "–ü–æ–ª–Ω–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤: $BACKUP_DIR"
  fi
fi

# –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ *.json —Ñ–∞–π–ª–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
DATA_FILES=(
  "trends_history.json"
  "rank_history.json" 
  "fear_greed_history.json"
  "*.json"
)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "–°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
while IFS= read -r file; do
  if [[ -f "$file" ]]; then
    echo "  –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ: $file"
    cp -f "$file" "./backups/$(basename "$file").backup"
    cp -f "$file" "/tmp/git_sync_backups/$(basename "$file").temp"
  fi
done < "$MODIFIED_FILES"

# –î–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö —Å—Ç–∞—Ç—É—Å–∞
echo "–°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤..."
for critical in "${CRITICAL_FILES[@]}"; do
  if [[ -f "$critical" ]]; then
    echo "  –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ñ–∞–π–ª–∞: $critical"
    cp -f "$critical" "./backups/$(basename "$critical").critical"
    cp -f "$critical" "/tmp/git_sync_backups/$(basename "$critical").critical"
  fi
done

# –î–µ–ª–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∏—Ö —Å—Ç–∞—Ç—É—Å–∞ –≤ git
echo "–°–æ–∑–¥–∞—é —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö..."
for data_file in "${DATA_FILES[@]}"; do
  if [[ "$data_file" == *"*"* ]]; then  # –ï—Å–ª–∏ –µ—Å—Ç—å —à–∞–±–ª–æ–Ω —Å '*'
    for f in $data_file; do
      if [[ -f "$f" ]]; then
        echo "  –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: $f"
        cp -f "$f" "/tmp/git_sync_backups/$(basename "$f").temp"
      fi
    done
  elif [[ -f "$data_file" ]]; then
    echo "  –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: $data_file"
    cp -f "$data_file" "/tmp/git_sync_backups/$(basename "$data_file").temp"
  fi
done

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
if [[ -s "$MODIFIED_FILES" ]]; then
  # –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
  echo "–í—Ä–µ–º–µ–Ω–Ω–æ —Å–±—Ä–∞—Å—ã–≤–∞—é –ª–æ–∫–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏..."
  git stash save "–í—Ä–µ–º–µ–Ω–Ω–æ–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–µ—Ä–µ–¥ sync_minimal $(date)"
  STASHED=1
else
  STASHED=0
fi

# –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º—Å—è —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º
echo "–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–µ–º..."
git pull origin main

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤—Å—ë –µ—â—ë —Å—É—â–µ—Å—Ç–≤—É—é—Ç
RESTORED_FILES=0
for critical in "${CRITICAL_FILES[@]}"; do
  if [[ ! -f "$critical" && -f "/tmp/git_sync_backups/$(basename "$critical").critical" ]]; then
    echo "‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–π —Ñ–∞–π–ª —É–¥–∞–ª—ë–Ω, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é: $critical"
    cp -f "/tmp/git_sync_backups/$(basename "$critical").critical" "$critical"
    RESTORED_FILES=1
  fi
done

for dir in "${CRITICAL_DIRS[@]}"; do
  if [[ ! -d "$dir" ]]; then
    echo "‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–¥–∞–ª–µ–Ω–∞, —Å–æ–∑–¥–∞—é: $dir"
    mkdir -p "$dir"
    RESTORED_FILES=1
  fi
done

if [[ $RESTORED_FILES -eq 1 ]]; then
  echo "‚úÖ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏"
fi

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã..."
while IFS= read -r file; do
  if [[ -f "/tmp/git_sync_backups/$(basename "$file").temp" ]]; then
    echo "  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ: $file"
    cp -f "/tmp/git_sync_backups/$(basename "$file").temp" "$file"
  fi
done < "$MODIFIED_FILES"

# –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö
echo "–í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é —Ñ–∞–π–ª—ã –¥–∞–Ω–Ω—ã—Ö..."
for data_file in "${DATA_FILES[@]}"; do
  if [[ "$data_file" == *"*"* ]]; then  # –ï—Å–ª–∏ –µ—Å—Ç—å —à–∞–±–ª–æ–Ω —Å '*'
    for f in /tmp/git_sync_backups/*.temp; do
      if [[ -f "$f" ]]; then
        base_name=$(basename "$f" .temp)
        if [[ -f "$base_name" ]]; then
          echo "  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: $base_name"
          cp -f "$f" "$base_name"
        fi
      fi
    done
  elif [[ -f "/tmp/git_sync_backups/$(basename "$data_file").temp" ]]; then
    echo "  –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö: $data_file"
    cp -f "/tmp/git_sync_backups/$(basename "$data_file").temp" "$data_file"
  fi
done

# –£–±–∏—Ä–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
echo "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
rm -f /tmp/git_sync_backups/*.temp
rm -f /tmp/git_sync_backups/*.critical
rm -f "$MODIFIED_FILES"
rm -f "$DELETED_FILES"

# –û–±–Ω–æ–≤–ª—è–µ–º .gitignore –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –¥–∞–Ω–Ω—ã—Ö
echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ .gitignore..."
for data_file in "${DATA_FILES[@]}"; do
  if [[ "$data_file" != *"*"* ]]; then
    if ! grep -q "$data_file" .gitignore; then
      echo "$data_file" >> .gitignore
      echo "–î–æ–±–∞–≤–ª–µ–Ω $data_file –≤ .gitignore"
    fi
  fi
done

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–∞..."
systemctl restart coinbasebot

echo "‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üìã –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã –∏ –¥–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã"