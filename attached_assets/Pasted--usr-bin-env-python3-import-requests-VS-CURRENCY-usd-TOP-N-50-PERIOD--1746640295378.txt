#!/usr/bin/env python3
import requests

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
VS_CURRENCY = 'usd'
TOP_N       = 50
PERIOD      = '30d'      # –ø–µ—Ä–∏–æ–¥ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: 30 –¥–Ω–µ–π
THRESHOLD   = 0.75       # –Ω–∏–∂–Ω—è—è –≥—Ä–∞–Ω–∏—Ü–∞ –∞–ª—å—Ç—Å–µ–∑–æ–Ω–∞

def fetch_market_data(vs='usd', per_page=TOP_N):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ —Ç–æ–ø-N –º–æ–Ω–µ—Ç–∞–º CoinGecko:
     - —Ç–µ–∫—É—â—É—é —Ü–µ–Ω—É
     - –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 30 –¥–Ω–µ–π
    """
    url = 'https://api.coingecko.com/api/v3/coins/markets'
    params = {
        'vs_currency': vs,
        'order':       'market_cap_desc',
        'per_page':    per_page,
        'page':        1,
        'price_change_percentage': '30d'
    }
    r = requests.get(url, params=params)
    r.raise_for_status()
    return r.json()

def calculate_altseason_index(data):
    """
    –°—á–∏—Ç–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –∞–ª—å—Ç—Å–µ–∑–æ–Ω–∞:
     = –¥–æ–ª—è –º–æ–Ω–µ—Ç —Å –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é > BTC –∑–∞ —Ç–æ—Ç –∂–µ –ø–µ—Ä–∏–æ–¥.
    """
    # –ù–∞—Ö–æ–¥–∏–º 30d-–¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å BTC
    btc = next((c for c in data if c['symbol']=='btc'), None)
    if not btc:
        raise ValueError("BTC –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö")
    btc_perf = btc['price_change_percentage_30d_in_currency'] or 0
    
    # –°—á–∏—Ç–∞–µ–º, —Å–∫–æ–ª—å–∫–æ –º–æ–Ω–µ—Ç –æ–ø–µ—Ä–µ–¥–∏–ª–∏ BTC
    ahead = 0
    for coin in data:
        perf = coin.get('price_change_percentage_30d_in_currency') or 0
        if perf > btc_perf:
            ahead += 1
    index = ahead / len(data)
    return index, btc_perf

def interpret_index(idx):
    if idx < 0.25:
        return "–ù–µ—Ç –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∞–ª—å—Ç-—Å–µ–∑–æ–Ω–∞"
    if idx < 0.50:
        return "–°–ª–∞–±—ã–π –∞–ª—å—Ç-—Å–∏–≥–Ω–∞–ª"
    if idx < 0.75:
        return "–£–º–µ—Ä–µ–Ω–Ω—ã–π –∞–ª—å—Ç-—Å–µ–∑–æ–Ω"
    return "–Ø—Ä–∫–æ –≤—ã—Ä–∞–∂–µ–Ω–Ω—ã–π –∞–ª—å—Ç-—Å–µ–∑–æ–Ω!"

def main():
    data = fetch_market_data(VS_CURRENCY, TOP_N)
    idx, btc_perf = calculate_altseason_index(data)
    label = interpret_index(idx)

    print(f"\nüìà Alt-Season Index (30d) –¥–ª—è —Ç–æ–ø {TOP_N} –∞–ª—å—Ç–æ–≤:")
    print(f"  ‚Ä¢ BTC 30d: {btc_perf:+.1f}%")
    print(f"  ‚Ä¢ –ò–Ω–¥–µ–∫—Å: {idx*100:.1f}% ‚Äî {label}")
    if idx >= THRESHOLD:
        print("  ‚Üí –°–µ–π—á–∞—Å –∞–ª—å—Ç-—Å–µ–∑–æ–Ω: –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ–ª–∏ –∞–ª—å—Ç–∫–æ–π–Ω–æ–≤.")
    else:
        print("  ‚Üí –ê–ª—å—Ç-—Å–µ–∑–æ–Ω –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª: BTC –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç –ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å.\n")

if __name__ == '__main__':
    main()
