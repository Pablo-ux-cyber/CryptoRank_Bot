# –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ: Telegram-–±–æ—Ç –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —à–∏—Ä–∏–Ω—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞

## –û–±—â–µ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞

–†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∏—Ä–∏–Ω—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞ - –ø—Ä–æ—Ü–µ–Ω—Ç —Ç–æ–ø-50 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç, —Ç–æ—Ä–≥—É—é—â–∏—Ö—Å—è –≤—ã—à–µ 200-–¥–Ω–µ–≤–Ω–æ–π —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π (MA200), —Å –≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–π –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–µ–π.

## –û—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

### 1. –§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞

#### 1.1 –†–∞—Å—á–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —à–∏—Ä–∏–Ω—ã —Ä—ã–Ω–∫–∞
- **–ò—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö**: CryptoCompare API (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –±–µ–∑ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è API –∫–ª—é—á–µ–π)
- **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç**: –¢–æ–ø-50 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –ø–æ —Ä—ã–Ω–æ—á–Ω–æ–π –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏
- **–ü–µ—Ä–∏–æ–¥ —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π**: 200 –¥–Ω–µ–π (MA200)
- **–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞**: 3 –≥–æ–¥–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö (1095 –¥–Ω–µ–π)
- **–§–æ—Ä–º—É–ª–∞ —Ä–∞—Å—á–µ—Ç–∞**: (–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç –≤—ã—à–µ MA200 / –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–æ–Ω–µ—Ç) * 100%

#### 1.2 –ê–ª–≥–æ—Ä–∏—Ç–º —Ä–∞–±–æ—Ç—ã
1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–ø-50 –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç –ø–æ –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ CoinGecko API
2. –î–ª—è –∫–∞–∂–¥–æ–π –º–æ–Ω–µ—Ç—ã –∑–∞–≥—Ä—É–∑–∫–∞ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ CryptoCompare API
3. –†–∞—Å—á–µ—Ç 200-–¥–Ω–µ–≤–Ω–æ–π —Å–∫–æ–ª—å–∑—è—â–µ–π —Å—Ä–µ–¥–Ω–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–Ω–µ—Ç—ã
4. –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –º–æ–Ω–µ—Ç, —Ç–æ—Ä–≥—É—é—â–∏—Ö—Å—è –≤—ã—à–µ MA200
5. –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Ä—è–¥–∞ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 3 –≥–æ–¥–∞

### 2. –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ —Å–∏—Å—Ç–µ–º—ã

#### 2.1 –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã
```
telegram_crypto_bot/
‚îú‚îÄ‚îÄ main.py                 # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –±–æ—Ç–∞
‚îú‚îÄ‚îÄ crypto_analyzer.py      # –ú–æ–¥—É–ª—å –∞–Ω–∞–ª–∏–∑–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç
‚îú‚îÄ‚îÄ data_cache.py          # –°–∏—Å—Ç–µ–º–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
‚îú‚îÄ‚îÄ chart_generator.py     # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≥—Ä–∞—Ñ–∏–∫–æ–≤
‚îú‚îÄ‚îÄ scheduler.py           # –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á
‚îú‚îÄ‚îÄ config.py             # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
‚îú‚îÄ‚îÄ requirements.txt      # –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
‚îî‚îÄ‚îÄ cache/                # –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –∫–µ—à–∞
```

#### 2.2 –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏

**crypto_analyzer.py**
```python
class CryptoAnalyzer:
    def __init__(self, cache=None):
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–æ–π –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        
    def get_top_coins(self, limit=50) -> List[Dict]:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–ø-50 –º–æ–Ω–µ—Ç —á–µ—Ä–µ–∑ CoinGecko API
        # URL: https://api.coingecko.com/api/v3/coins/markets
        
    def get_coin_history(self, coin_symbol: str, days: int) -> pd.DataFrame:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ CryptoCompare API
        # URL: https://min-api.cryptocompare.com/data/v2/histoday
        
    def calculate_market_breadth(self, historical_data: Dict, 
                               ma_period=200, analysis_days=1095) -> pd.DataFrame:
        # –†–∞—Å—á–µ—Ç –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ —à–∏—Ä–∏–Ω—ã —Ä—ã–Ω–∫–∞
        # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç DataFrame —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏: date, percentage, above_ma, total_coins
        
    def get_market_summary(self, indicator_data: pd.DataFrame) -> Dict:
        # –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä—ã–Ω–∫–∞
        # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç: current_percentage, trend, market_condition
```

**data_cache.py**
```python
class DataCache:
    def __init__(self, cache_dir="cache"):
        # –§–∞–π–ª–æ–≤–∞—è —Å–∏—Å—Ç–µ–º–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è
        # –í—Ä–µ–º—è –∂–∏–∑–Ω–∏ –∫–µ—à–∞: 6 —á–∞—Å–æ–≤
        
    def get_coin_data(self, coin_id: str, required_days: int) -> pd.DataFrame:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –∫–µ—à–∞ –∏–ª–∏ None
        
    def save_coin_data(self, coin_id: str, data: pd.DataFrame, days: int):
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–µ—à
```

**chart_generator.py**
```python
class ChartGenerator:
    def create_market_breadth_chart(self, 
                                  indicator_data: pd.DataFrame,
                                  btc_data: pd.DataFrame = None) -> str:
        # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞:
        # - –í–µ—Ä—Ö–Ω—è—è –ø–∞–Ω–µ–ª—å: —Ü–µ–Ω–∞ Bitcoin
        # - –ù–∏–∂–Ω—è—è –ø–∞–Ω–µ–ª—å: –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∏—Ä–∏–Ω—ã —Ä—ã–Ω–∫–∞ —Å —É—Ä–æ–≤–Ω—è–º–∏ 10% –∏ 80%
        # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
```

### 3. API –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏

#### 3.1 CoinGecko API (–¥–ª—è —Å–ø–∏—Å–∫–∞ –º–æ–Ω–µ—Ç)
```
GET https://api.coingecko.com/api/v3/coins/markets
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
- vs_currency=usd
- order=market_cap_desc
- per_page=50
- page=1
- sparkline=false
```

#### 3.2 CryptoCompare API (–¥–ª—è –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö)
```
GET https://min-api.cryptocompare.com/data/v2/histoday
–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
- fsym={—Å–∏–º–≤–æ–ª_–º–æ–Ω–µ—Ç—ã}
- tsym=USD
- limit={–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ_–¥–Ω–µ–π}
- toTs={unix_timestamp}
```


```
üìä –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä —à–∏—Ä–∏–Ω—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω–æ–≥–æ —Ä—ã–Ω–∫–∞

üóì {–¥–∞—Ç–∞}
üìà –¢–µ–∫—É—â–∏–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä: {–ø—Ä–æ—Ü–µ–Ω—Ç}% ({–∏–∑–º–µ–Ω–µ–Ω–∏–µ})
üè∑ –°—Ç–∞—Ç—É—Å —Ä—ã–Ω–∫–∞: {—Å–æ—Å—Ç–æ—è–Ω–∏–µ}

üíπ Bitcoin: ${—Ü–µ–Ω–∞} ({–∏–∑–º–µ–Ω–µ–Ω–∏–µ}%)
üîó –ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è —Å BTC: {–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç}

üìã –î–µ—Ç–∞–ª–∏:
‚Ä¢ –ú–æ–Ω–µ—Ç –≤—ã—à–µ MA200: {–∫–æ–ª–∏—á–µ—Å—Ç–≤–æ} –∏–∑ 50
‚Ä¢ –ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞: 3 –≥–æ–¥–∞
‚Ä¢ –°–∫–æ–ª—å–∑—è—â–∞—è —Å—Ä–µ–¥–Ω—è—è: 200 –¥–Ω–µ–π

{–≥—Ä–∞—Ñ–∏–∫_–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ}
```

#### 4.3 –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
```python
def interpret_market_condition(percentage: float) -> str:
    if percentage >= 80:
        return "üü¢ –ë—ã—á–∏–π —Ä—ã–Ω–æ–∫ (–≤–æ–∑–º–æ–∂–Ω–∞—è –ø–µ—Ä–µ–∫—É–ø–ª–µ–Ω–Ω–æ—Å—Ç—å)"
    elif percentage >= 60:
        return "üü¢ –°–∏–ª—å–Ω—ã–π –±—ã—á–∏–π —Ç—Ä–µ–Ω–¥"
    elif percentage >= 40:
        return "üü° –ù–µ–π—Ç—Ä–∞–ª—å–Ω—ã–π —Ä—ã–Ω–æ–∫"
    elif percentage >= 20:
        return "üî¥ –ú–µ–¥–≤–µ–∂–∏–π —Ç—Ä–µ–Ω–¥"
    else:
        return "üî¥ –°–∏–ª—å–Ω—ã–π –º–µ–¥–≤–µ–∂–∏–π —Ä—ã–Ω–æ–∫ (–≤–æ–∑–º–æ–∂–Ω–∞—è –ø–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω–Ω–æ—Å—Ç—å)"
```

### 5. –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è

#### 5.1 –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python
```
python-telegram-bot==20.7
pandas==2.1.4
requests==2.31.0
plotly==5.17.0
kaleido==0.2.1
numpy==1.24.3
schedule==1.2.0
python-dotenv==1.0.0
```

#### 5.2 –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
```
TELEGRAM_BOT_TOKEN=your_bot_token_here
NOTIFICATION_CHAT_ID=your_chat_id_here
NOTIFICATION_TIME=09:00
TIMEZONE=UTC
CACHE_DURATION_HOURS=6
```

#### 5.3 –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è (config.py)
```python
import os
from dataclasses import dataclass

@dataclass
class Config:
    TELEGRAM_BOT_TOKEN: str = os.getenv('TELEGRAM_BOT_TOKEN')
    NOTIFICATION_CHAT_ID: str = os.getenv('NOTIFICATION_CHAT_ID')
    NOTIFICATION_TIME: str = os.getenv('NOTIFICATION_TIME', '09:00')
    TIMEZONE: str = os.getenv('TIMEZONE', 'UTC')
    CACHE_DURATION_HOURS: int = int(os.getenv('CACHE_DURATION_HOURS', '6'))
    
    # API –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    COINGECKO_BASE_URL = "https://api.coingecko.com/api/v3"
    CRYPTOCOMPARE_BASE_URL = "https://min-api.cryptocompare.com/data"
    
    # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∞–Ω–∞–ª–∏–∑–∞
    TOP_COINS_COUNT = 50
    MA_PERIOD = 200
    ANALYSIS_DAYS = 1095  # 3 –≥–æ–¥–∞
```




```

### 8. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

#### 8.1 API –æ—à–∏–±–∫–∏
- Retry –º–µ—Ö–∞–Ω–∏–∑–º —Å —ç–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π
- Fallback –Ω–∞ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ API
- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ—à–∏–±–æ–∫ API


### 9. –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ

```python
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('crypto_bot.log'),
        logging.StreamHandler()
    ]
)

# –õ–æ–≥–∏—Ä—É–µ–º—ã–µ —Å–æ–±—ã—Ç–∏—è:
# - –ó–∞–ø—É—Å–∫/–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞
# - –£—Å–ø–µ—à–Ω—ã–µ/–Ω–µ—É—Å–ø–µ—à–Ω—ã–µ API –∑–∞–ø—Ä–æ—Å—ã
# - –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
# - –û—à–∏–±–∫–∏ –∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è
# - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–µ—à–∞
```
