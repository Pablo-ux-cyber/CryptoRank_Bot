#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –º–æ–Ω–µ—Ç
"""

import requests
import os
import time
from datetime import datetime

def test_coin_availability():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –≤—Å–µ—Ö –º–æ–Ω–µ—Ç –∏–∑ —Å–ø–∏—Å–∫–∞"""
    
    # –°–ø–∏—Å–æ–∫ –º–æ–Ω–µ—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    coins = [
        'BTC', 'ETH', 'BNB', 'XRP', 'SOL', 'ADA', 'DOGE', 'TRX', 'HYPE', 'XLM', 
        'SUI', 'LINK', 'HBAR', 'BCH', 'AVAX', 'SHIB', 'TON', 'LTC', 'DOT', 'XMR',
        'UNI', 'PEPE', 'AAVE', 'APT', 'NEAR', 'ONDO', 'MNT'
    ]
    
    api_key = os.environ.get('CRYPTOCOMPARE_API_KEY')
    base_url = "https://min-api.cryptocompare.com/data/v2/histoday"
    
    print(f"üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ {len(coins)} –º–æ–Ω–µ—Ç...")
    print(f"üîë API –∫–ª—é—á: {'‚úÖ –ù–∞–π–¥–µ–Ω' if api_key else '‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}")
    print("-" * 70)
    
    available_coins = []
    unavailable_coins = []
    
    for i, coin in enumerate(coins, 1):
        print(f"[{i:2d}/27] –¢–µ—Å—Ç–∏—Ä—É—é {coin}...", end=" ")
        
        try:
            params = {
                'fsym': coin,
                'tsym': 'USD',
                'limit': 100,  # –¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ 100 –¥–Ω–µ–π
                'aggregate': 1
            }
            
            if api_key:
                params['api_key'] = api_key
            
            response = requests.get(base_url, params=params, timeout=10)
            
            if response.status_code == 200:
                data = response.json()
                
                if data.get('Response') == 'Error':
                    error_msg = data.get('Message', 'Unknown error')
                    print(f"‚ùå API Error: {error_msg}")
                    unavailable_coins.append((coin, f"API Error: {error_msg}"))
                elif 'Data' in data and 'Data' in data['Data']:
                    records = len(data['Data']['Data'])
                    print(f"‚úÖ {records} –∑–∞–ø–∏—Å–µ–π")
                    available_coins.append(coin)
                else:
                    print(f"‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö")
                    unavailable_coins.append((coin, "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö"))
            else:
                print(f"‚ùå HTTP {response.status_code}")
                unavailable_coins.append((coin, f"HTTP {response.status_code}"))
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
            unavailable_coins.append((coin, str(e)))
        
        # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
        time.sleep(0.1)
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "="*70)
    print(f"üìä –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:")
    print(f"‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–Ω–µ—Ç: {len(available_coins)}/27")
    print(f"‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–Ω–µ—Ç: {len(unavailable_coins)}/27")
    
    if available_coins:
        print(f"\n‚úÖ –î–û–°–¢–£–ü–ù–´–ï –ú–û–ù–ï–¢–´ ({len(available_coins)}):")
        for coin in available_coins:
            print(f"   ‚Ä¢ {coin}")
    
    if unavailable_coins:
        print(f"\n‚ùå –ù–ï–î–û–°–¢–£–ü–ù–´–ï –ú–û–ù–ï–¢–´ ({len(unavailable_coins)}):")
        for coin, reason in unavailable_coins:
            print(f"   ‚Ä¢ {coin}: {reason}")
    
    # –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—é
    print(f"\nüîß –ü–†–ï–î–õ–û–ñ–ï–ù–ò–Ø –ü–û –ò–°–ü–†–ê–í–õ–ï–ù–ò–Æ:")
    if unavailable_coins:
        print("1. –£–¥–∞–ª–∏—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞")
        print("2. –ó–∞–º–µ–Ω–∏—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–Ω–µ—Ç—ã –Ω–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ")
        print("3. –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π API –¥–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–Ω–µ—Ç")
    
    return available_coins, unavailable_coins

if __name__ == "__main__":
    available, unavailable = test_coin_availability()
    
    if unavailable:
        print(f"\n‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: {len(unavailable)} –º–æ–Ω–µ—Ç –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã!")
        print("–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã.")
    else:
        print(f"\nüéâ –í–°–ï –ú–û–ù–ï–¢–´ –î–û–°–¢–£–ü–ù–´!")