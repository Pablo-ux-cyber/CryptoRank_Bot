#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ –ø–æ—Ç–æ–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π - –∫–∞–∫ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ
"""

import sys
sys.path.insert(0, '/home/runner/workspace')

def test_full_message_flow():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –ø–æ—Ç–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞–∫ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ"""
    
    print("=== –¢–ï–°–¢ –ü–û–õ–ù–û–ì–û –ü–û–¢–û–ö–ê –°–û–û–ë–©–ï–ù–ò–ô ===")
    
    try:
        from load_dotenv import load_dotenv
        load_dotenv()
        
        from scheduler import SensorTowerScheduler
        scheduler = SensorTowerScheduler()
        print("‚úÖ –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å–æ–∑–¥–∞–Ω")
        
        # –ò–º–∏—Ç–∏—Ä—É–µ–º run_scraping_job() –±–µ–∑ —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
        print("\n--- –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö ---")
        
        # 1. –ü–æ–ª—É—á–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞
        from json_rank_reader import get_rank_from_json
        current_rank = get_rank_from_json()
        print(f"‚úÖ –†–µ–π—Ç–∏–Ω–≥ –ø–æ–ª—É—á–µ–Ω: {current_rank}")
        
        # 2. Fear & Greed Index
        fear_greed_data = scheduler.fear_greed_tracker.get_fear_greed_index()
        print(f"‚úÖ Fear & Greed: {fear_greed_data['value'] if fear_greed_data else '–û—à–∏–±–∫–∞'}")
        
        # 3. Altcoin Season Index
        altseason_data = scheduler.altcoin_season_index.get_altseason_index()
        altcoin_result = f"{altseason_data['index']:.1%}" if altseason_data else "–û—à–∏–±–∫–∞"
        print(f"‚úÖ Altcoin Season: {altcoin_result}")
        
        # 4. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        print("\n--- –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ ---")
        
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ª–æ–≥–∏–∫—É –∏–∑ scheduler.py
        message_parts = []
        
        # –†–µ–π—Ç–∏–Ω–≥
        message_parts.append(f"üì± Coinbase: #{current_rank}")
        
        # Fear & Greed
        if fear_greed_data:
            fear_greed_message = scheduler.fear_greed_tracker.format_fear_greed_message(fear_greed_data)
            if fear_greed_message:
                message_parts.append(fear_greed_message)
        
        # Altcoin Season
        if altseason_data:
            altseason_message = scheduler.altcoin_season_index.format_altseason_message(altseason_data)
            if altseason_message:
                message_parts.append(altseason_message)
        
        final_message = "\n\n".join(message_parts)
        print(f"–°—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:\n{final_message}")
        
        # 5. –¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏
        print("\n--- –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É ---")
        success = scheduler.telegram_bot.send_message(final_message)
        
        if success:
            print("‚úÖ –ü–û–õ–ù–´–ô –ü–û–¢–û–ö –†–ê–ë–û–¢–ê–ï–¢! –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram")
            return True
        else:
            print("‚ùå –û–®–ò–ë–ö–ê –í –û–¢–ü–†–ê–í–ö–ï")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –ø–æ—Ç–æ–∫–µ: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_full_message_flow()