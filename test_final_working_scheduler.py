#!/usr/bin/env python3
"""
–§–ò–ù–ê–õ–¨–ù–´–ô —Ç–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ —Å Market Breadth - —Å–∫–æ–ø–∏—Ä–æ–≤–∞–ª —Ç–æ—á–Ω—É—é –ª–æ–≥–∏–∫—É —Ä–∞–±–æ—á–µ–≥–æ test-message
"""

import sys
sys.path.insert(0, '/home/runner/workspace')

def test_scheduler_with_market_breadth():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ —Å Market Breadth –¥–∞–Ω–Ω—ã–º–∏"""
    
    print("=== –§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê –° MARKET BREADTH ===")
    
    try:
        from load_dotenv import load_dotenv
        load_dotenv()
        
        from scheduler import SensorTowerScheduler
        scheduler = SensorTowerScheduler()
        
        # –†–µ–π—Ç–∏–Ω–≥ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        rankings_data = {
            "app_name": "Coinbase",
            "categories": [{"rank": "139"}]
        }
        
        # Fear & Greed
        fear_greed_data = scheduler.fear_greed_tracker.get_fear_greed_index()
        print(f"‚úÖ Fear & Greed: {fear_greed_data['value'] if fear_greed_data else '–æ—à–∏–±–∫–∞'}")
        
        # Market Breadth –¥–∞–Ω–Ω—ã–µ (–∏–º–∏—Ç–∏—Ä—É–µ–º –∫–∞–∫ –≤ —Ä–∞–±–æ—á–µ–º test-message)
        market_breadth_data = {
            'signal': 'üü°',
            'condition': 'Neutral',
            'current_value': 36.4  # –í–ê–ñ–ù–û: –∏—Å–ø–æ–ª—å–∑—É–µ–º current_value –∫–∞–∫ –≤ test-message
        }
        print(f"‚úÖ Market Breadth –≥–æ—Ç–æ–≤: {market_breadth_data}")
        
        print("\n--- –¢–ï–°–¢–ò–†–£–ï–ú –ò–°–ü–†–ê–í–õ–ï–ù–ù–´–ô –ü–õ–ê–ù–ò–†–û–í–©–ò–ö ---")
        
        # –í—ã–∑—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
        success = scheduler._send_combined_message(
            rankings_data=rankings_data,
            fear_greed_data=fear_greed_data,
            market_breadth_data=market_breadth_data,
            chart_data=None
        )
        
        if success:
            print("üéØ ‚úÖ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –†–ê–ë–û–¢–ê–ï–¢ –ò–î–ï–ê–õ–¨–ù–û!")
            print("\nüìã –§–ò–ù–ê–õ–¨–ù–û–ï –°–û–û–ë–©–ï–ù–ò–ï –°–û–î–ï–†–ñ–ò–¢:")
            print("- –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ–π—Ç–∏–Ω–≥–∞")
            print("- Fear & Greed —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º") 
            print("- Market by 200MA —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π –Ω–∞ –≥—Ä–∞—Ñ–∏–∫")
            print("\nüöÄ –ì–û–¢–û–í –î–õ–Ø –°–ï–†–í–ï–†–ê!")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–µ")
            
        return success
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_scheduler_with_market_breadth()