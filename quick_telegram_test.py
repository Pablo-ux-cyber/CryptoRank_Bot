#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram –±–µ–∑ –ª–∏—à–Ω–∏—Ö –¥–∞–Ω–Ω—ã—Ö
"""

from load_dotenv import load_dotenv
load_dotenv()

from logger import logger
from telegram_bot_sync import TelegramBotSync
from json_rank_reader import get_rank_from_json
from fear_greed_index import FearGreedIndexTracker
from altcoin_season_index import AltcoinSeasonIndex

def quick_telegram_test():
    logger.info("=== –ë–´–°–¢–†–´–ô –¢–ï–°–¢ TELEGRAM ===")
    
    try:
        # 1. Telegram API
        import os
        token = os.getenv('TELEGRAM_BOT_TOKEN')
        channel_id = os.getenv('TELEGRAM_CHANNEL_ID')
        
        if not token or not channel_id:
            logger.error("‚ùå –ù–µ—Ç —Ç–æ–∫–µ–Ω–∞ –∏–ª–∏ channel_id –≤ .env")
            return False
            
        telegram_bot = TelegramBotSync(token, channel_id)
        if not telegram_bot.test_connection():
            logger.error("‚ùå Telegram API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç")
            return False
        logger.info("‚úÖ Telegram API —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        # 2. –î–∞–Ω–Ω—ã–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –∏–∑ JSON
        rank = get_rank_from_json()
        logger.info(f"‚úÖ –†–µ–π—Ç–∏–Ω–≥: {rank}")
        
        # 3. Fear & Greed Index
        fear_greed_tracker = FearGreedIndexTracker()
        fear_greed_data = fear_greed_tracker.get_fear_greed_index()
        logger.info(f"‚úÖ Fear & Greed: {fear_greed_data['value']}")
        
        # 4. Altcoin Season
        altseason_tracker = AltcoinSeasonIndex()
        altseason_data = altseason_tracker.get_altseason_index()
        logger.info(f"‚úÖ Altcoin Season: {altseason_data['index_value']*100:.1f}%")
        
        # 5. –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ë–ï–ó MARKET BREADTH
        message = f"""üìä Daily Market Report
        
üè™ Coinbase Rank: #{rank}
üò± Fear & Greed: {fear_greed_data['value']} ({fear_greed_data['classification']})
üîÑ Altcoin Season: {altseason_data['signal']} {altseason_data['index']*100:.1f}% ({altseason_data['status']})

‚è∞ {fear_greed_data['last_update']}"""
        
        # 6. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        logger.info("–û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
        success = telegram_bot.send_message_sync(message)
        
        if success:
            logger.info("‚úÖ –°–û–û–ë–©–ï–ù–ò–ï –û–¢–ü–†–ê–í–õ–ï–ù–û –í TELEGRAM!")
            return True
        else:
            logger.error("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram")
            return False
            
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    quick_telegram_test()