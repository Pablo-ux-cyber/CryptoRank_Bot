#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –ë–ï–ó Market Breadth –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞
"""

import sys
sys.path.insert(0, '/home/runner/workspace')

def test_scheduler_basic_message():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –±–∞–∑–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –±–µ–∑ Market Breadth"""
    
    print("=== –¢–ï–°–¢ –ë–ê–ó–û–í–û–ì–û –°–û–û–ë–©–ï–ù–ò–Ø –ò–ó –ü–õ–ê–ù–ò–†–û–í–©–ò–ö–ê ===")
    
    try:
        from load_dotenv import load_dotenv
        load_dotenv()
        
        from scheduler import SensorTowerScheduler
        scheduler = SensorTowerScheduler()
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Ç–æ–º –∂–µ —Ñ–æ—Ä–º–∞—Ç–µ —á—Ç–æ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
        rankings_data = {
            "app_name": "Coinbase",
            "app_id": "886427730", 
            "date": "2025-07-16",
            "categories": [
                {"category": "US - iPhone - Top Free", "rank": "139"}
            ],
            "trend": {"direction": "same", "previous": None}
        }
        
        # –ü–æ–ª—É—á–∞–µ–º Fear & Greed –¥–∞–Ω–Ω—ã–µ
        fear_greed_data = scheduler.fear_greed_tracker.get_fear_greed_index()
        print(f"Fear & Greed –ø–æ–ª—É—á–µ–Ω: {fear_greed_data['value'] if fear_greed_data else '–æ—à–∏–±–∫–∞'}")
        
        print("--- –í—ã–∑—ã–≤–∞–µ–º _send_combined_message –ë–ï–ó Market Breadth ---")
        
        # –í—ã–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –ë–ï–ó market_breadth_data
        success = scheduler._send_combined_message(
            rankings_data=rankings_data,
            fear_greed_data=fear_greed_data,
            market_breadth_data=None,  # –ù–ï–¢ Market Breadth
            chart_data=None
        )
        
        if success:
            print("‚úÖ –ü–õ–ê–ù–ò–†–û–í–©–ò–ö –û–¢–ü–†–ê–í–ò–õ –ë–ê–ó–û–í–û–ï –°–û–û–ë–©–ï–ù–ò–ï!")
            print("–°–æ–¥–µ—Ä–∂–∏—Ç:")
            print("- üîº Coinbase Appstore Rank: 139") 
            print("- Fear & Greed —Å –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–æ–º")
            print("- –ù–ï–¢ Market Breadth (–∫–∞–∫ –æ–∂–∏–¥–∞–ª–æ—Å—å)")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –±–∞–∑–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")
            
        return success
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_scheduler_basic_message()